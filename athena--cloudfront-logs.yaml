AWSTemplateFormatVersion: "2010-09-09"
Description: "Configures Athena and s3 for querying cloudfront logs"

Parameters:
  Environment:
    Type: String
    Default: "staging"
    AllowedValues:
      - staging
      - production
    Description: "The deployment environment. Valid values are staging or production."
  
Resources:
  
  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${Environment}--logs"
      LifecycleConfiguration:
        Rules:
          - Id: "DeleteLogsAfter6Months"
            Status: "Enabled"
            ExpirationInDays: 180
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  AthenaGlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref "AWS::AccountId"
      DatabaseInput: 
         Name: !Sub '${Environment}--logs'
  
  AthenaGlueTable:
    Type: AWS::Glue::Table
    Properties:
      DatabaseName: !Ref AthenaGlueDatabase
      CatalogId: !Ref "AWS::AccountId"
      TableInput:
        Name: 'access_logs'
        TableType: EXTERNAL_TABLE
        StorageDescriptor:
          Location: 
            Fn::Join:
              - ""
              - - "s3://"
                - !Ref LogBucket
                - "/"
          Columns:
            - Name: 'timestamp'
              Type: 'string'
            - Name: 'DistributionId'
              Type: 'string'
            - Name: 'date'
              Type: 'string'
            - Name: 'time'
              Type: 'string'
            - Name: 'x_edge_location'
              Type: 'string'
            - Name: 'sc_bytes'
              Type: 'string'
            - Name: 'c_ip'
              Type: 'string'
            - Name: 'cs_method'
              Type: 'string'
            - Name: 'cs_Host'
              Type: 'string'
            - Name: 'cs_uri_stem'
              Type: 'string'
            - Name: 'sc_status'
              Type: 'string'
            - Name: 'cs_Referer'
              Type: 'string'
            - Name: 'cs_User_Agent'
              Type: 'string'
            - Name: 'cs_uri_query'
              Type: 'string'
            - Name: 'cs_Cookie'
              Type: 'string'
            - Name: 'x_edge_result_type'
              Type: 'string'
            - Name: 'x_edge_request_id'
              Type: 'string'
            - Name: 'x_host_header'
              Type: 'string'
            - Name: 'cs_protocol'
              Type: 'string'
            - Name: 'cs_bytes'
              Type: 'string'
            - Name: 'time_taken'
              Type: 'string'
            - Name: 'x_forwarded_for'
              Type: 'string'
            - Name: 'ssl_protocol'
              Type: 'string'
            - Name: 'ssl_cipher'
              Type: 'string'
            - Name: 'x_edge_response_result_type'
              Type: 'string'
            - Name: 'cs_protocol_version'
              Type: 'string'
            - Name: 'fle_status'
              Type: 'string'
            - Name: 'fle_encrypted_fields'
              Type: 'string'
            - Name: 'c_port'
              Type: 'string'
            - Name: 'time_to_first_byte'
              Type: 'string'
            - Name: 'x_edge_detailed_result_type'
              Type: 'string'
            - Name: 'sc_content_type'
              Type: 'string'
            - Name: 'sc_content_len'
              Type: 'string'
            - Name: 'sc_range_start'
              Type: 'string'
            - Name: 'sc_range_end'
              Type: 'string'
            - Name: 'timestamp_ms'
              Type: 'string'
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Parameters:
            projection.enabled: "true"
            projection.year.type: "integer"
            projection.year.range: "2020,2030"
            projection.month.type: "integer"
            projection.month.range: "1,12"
            projection.day.type: "integer"
            projection.day.range: "1,31"
            projection.hour.type: "integer"
            projection.hour.range: "0,23"
            storage.location.template: 
              Fn::Join:
                - ""
                - - "s3://"
                  - !Ref LogBucket
                  - "/year=${year}/month=${month}/day=${day}/hour=${hour}/"
      
        PartitionKeys:
          - Name: year
            Type: string
          - Name: month
            Type: string
          - Name: day
            Type: string
          - Name: hour
            Type: string
        Parameters:
          EXTERNAL: "TRUE"
          classification: "parquet"
Outputs:
  S3Bucket:
      Description: "LogBucket"
      Value: !Ref LogBucket
      Export:
        Name: !Join [ "--", [ !Ref Environment, "LogBucket" ] ]
